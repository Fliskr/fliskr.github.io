{"version":3,"sources":["checkbox.svg","Card.js","AddCard.js","CardsPage.js","EditCard.js","helpers/readFile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","styled","div","Body","Logo","src","Text","Title","Description","Footer","Avatar","MoreAvatars","Card","image","title","description","dashed","onClick","avatars","slice","map","index","avatar","key","length","Wrapper","withRouter","props","history","push","useState","cards","setCards","getCards","a","request","fetch","ok","id","json","useEffect","item","Form","form","TeamBlock","Input","input","Label","label","ErrorLabel","InputElementLayout","InputElement","name","text","type","setState","state","errors","placeholder","htmlFor","onChange","e","target","value","LogoImage","AddLogoBlock","TextBlock","Table","table","TeamMembersBlock","CheckboxBlock","checked","CheckboxIcon","Checkbox","match","params","logo","setLogo","user","details","teamMembers","setTeamMembers","getDataById","response","cardData","validate","every","callback","file","document","querySelector","files","reader","FileReader","onloadend","result","readAsDataURL","readFile","onSubmit","preventDefault","Object","keys","alert","JSON","stringify","filter","console","log","some","i","setItemChecked","to","App","path","exact","component","CardsPage","EditCard","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2efc56f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checkbox.cd8ee429.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"typeface-open-sans\";\nconst Layout = styled.div`\n    display: flex;\n    flex: 0 1 368px;\n    width: 368px;\n    height: 145px;\n    border: 1px solid lightgray;\n    border-radius: 5px;\n    flex-direction: column;\n    margin: 10px 21px 8px 0;\n    cursor: pointer;\n    &:hover {\n        box-shadow: 0 0 20px 4px rgba(0, 0, 0, 0.05);\n    }\n`;\n\nconst Body = styled.div`\n    border-bottom: 1px solid lightgray;\n    display: flex;\n    flex: 0 1 95px;\n`;\n\nconst Logo = styled.div`\n    border-radius: 50%;\n    width: 48px;\n    height: 48px;\n    background: lightgray url(${({src = \"\"}) => src}) center;\n    background-size: 100%;\n    display: block;\n    margin: 20px 0 0 15px;\n`;\n\nconst Text = styled.div`\n    flex: 1 0 auto;\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    height: 100%;\n    margin: 26px 0 0 16px;\n    color: #2a3f58;\n    font-family: \"Open Sans\";\n`;\n\nexport const Title = styled.div`\n    font-size: 14px;\n    letter-spacing: -0.2px;\n    line-height: 16px;\n    font-weight: 600;\n`;\n\nconst Description = styled.div`\n    margin-top: 5px;\n    font-size: 12px;\n    font-weight: 600;\n    letter-spacing: -0.17px;\n    line-height: 16px;\n    opacity: 0.5;\n`;\n\nconst Footer = styled.div`\n    flex: 0 1 48px;\n    max-height: 48px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    padding: 0 0px 0 15px;\n`;\n\nconst Avatar = styled(Logo)`\n    width: 25px;\n    height: 25px;\n    margin: 0 8px 0 0;\n    display: inline-block;\n`;\n\nconst MoreAvatars = styled.div`\n    display: inline-block;\n    background: lightgray;\n    border-radius: 50%;\n    position: relative;\n    width: 25px;\n    height: 25px;\n    margin-left: 15px;\n    padding-top: 5px;\n    text-align: center;\n    color: #333;\n    font-weight: bolder;\n    font-size: 12px;\n    :before {\n        left: -18px;\n        top: 2px;\n        content: \"+\";\n        width: 30px;\n        font-size: 16px;\n        font-weight: 400;\n        display: flex;\n        position: absolute;\n    }\n`;\nexport default function Card({\n    image = \"\",\n    title = \"\",\n    description = \"\",\n    dashed = false,\n    onClick = () => {},\n    avatars = [],\n}) {\n    return (\n        <Layout onClick={onClick} dashed={dashed}>\n            <Body>\n                <Logo src={image} />\n                <Text>\n                    <Title>{title}</Title>\n                    <Description>{description}</Description>\n                </Text>\n            </Body>\n            <Footer>\n                {avatars.slice(0, 9).map(({ avatar }, index) => (\n                    <Avatar key={index} src={avatar} />\n                ))}\n                {!!avatars.slice(9).length && <MoreAvatars>{avatars.slice(9).length}</MoreAvatars>}\n            </Footer>\n        </Layout>\n    );\n}\n","import React from \"react\";\nimport Card from \"./Card\";\nimport {withRouter} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {Title} from \"./Card\";\nconst Wrapper = styled.div`\n    & > div {\n        border-style: dashed;\n    }\n    ${Title} {\n        opacity: 0.5;\n    }\n`;\n\nfunction AddCard(props) {\n    return <Wrapper>\n        <Card onClick={() => {\n            props.history.push(\"/add-card\")\n        }} avatars={[]} dashed={true} src=\"\" title=\"New team...\" description=\"\">\n        </Card>\n    </Wrapper>\n\n}\n\nexport default withRouter(AddCard)\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"./Card\";\nimport AddCard from \"./AddCard\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Layout = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    width: 100%;\n    margin: 20px 30px;\n`;\n\nfunction CardsPage(props) {\n    const [cards, setCards] = useState([]);\n    const getCards = async () => {\n        const request = fetch(\"/get-cards\");\n        if (!request.ok) {\n            return setCards([\n                {\n                    id: 1,\n                    image:\n                        \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                    title: \"The Sell Outs\",\n                    description: \"They'll sell anything to make a buck.\",\n                    avatars: [],\n                },\n                {\n                    id: 2,\n                    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/TEIDE.JPG/220px-TEIDE.JPG\",\n                    title: \"The Sell Outsa\",\n                    description: \"They'll sell anything to make a buck.\",\n                    avatars: [],\n                },\n                {\n                    id: 3,\n                    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/TEIDE.JPG/220px-TEIDE.JPG\",\n                    title: \"The Sell Outs\",\n                    description: \"They'll sell anything to make a buck.\",\n                    avatars: [],\n                },\n                {\n                    id: 4,\n                    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/TEIDE.JPG/220px-TEIDE.JPG\",\n                    title: \"The Sell Outs\",\n                    description: \"They'll sell anything to make a buck.\",\n                    avatars: [],\n                },\n                {\n                    id: 5,\n                    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/TEIDE.JPG/220px-TEIDE.JPG\",\n                    title: \"The Sell Outs\",\n                    description: \"They'll sell anything to make a buck.\",\n                    avatars: [],\n                },\n                {\n                    id: 6,\n                    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/TEIDE.JPG/220px-TEIDE.JPG\",\n                    title: \"The Sell Outs\",\n                    description: \"They'll sell anything to make a buck.\",\n                    avatars: [\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                        {\n                            avatar:\n                                \"https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n                        },\n                    ],\n                },\n            ]);\n        }\n        const cards = await request.json();\n        setCards(cards || []);\n    };\n    useEffect(() => {\n        getCards();\n    }, []);\n    return (\n        <Layout>\n            {cards.map((item, index) => (\n                <Card\n                    {...item}\n                    onClick={() => {\n                        props.history.push(`/edit-card/${item.id}`);\n                    }}\n                    key={index}\n                />\n            ))}\n            <AddCard />\n        </Layout>\n    );\n}\n\nexport default withRouter(CardsPage);\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport CheckboxIcon from \"./checkbox.svg\";\nimport readFile from \"./helpers/readFile\";\n\nconst Layout = styled.div`\n    display: flex;\n    flex-direction: column;\n    background: #eee;\n`;\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    margin: 24px 32px;\n\n    border-radius: 5px;\n`;\n\nconst TeamBlock = styled.div`\n    border: 1px solid lightgray;\n    width: 100%;\n    height: 190px;\n    display: flex;\n    flex-direction: row;\n    background: #fff;\n    padding: 24px;\n    border-radius: 5px;\n`;\n\nconst Input = styled.input`\n    margin-top: 8px;\n    margin-bottom: 24px;\n    padding: 8px;\n`;\n\nconst Label = styled.label`\n    color: #333;\n    padding: 12px 0 0;\n    margin: 8px;\n`;\n\nconst ErrorLabel = styled(Label)`\n    color: red;\n    position: absolute;\n    bottom: 0px;\n    padding: 0;\n    margin: 0;\n`;\n\nconst InputElementLayout = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n`;\n\nconst InputElement = ({ name, text, type = \"text\", setState, state, errors, placeholder = \"\" }) => {\n    return (\n        <InputElementLayout>\n            <Label htmlFor={name}>{text}</Label>\n            <Input\n                onChange={e => {\n                    setState({ ...state, [name]: e.target.value });\n                }}\n                placeholder={placeholder}\n                name={name}\n                id={name}\n                value={state && state[name]}\n                type={type}\n            />\n            <ErrorLabel>{errors && errors[name]}</ErrorLabel>\n        </InputElementLayout>\n    );\n};\n\nconst LogoImage = styled.div`\n    display: block;\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    background-color: lightgray;\n    padding: 0;\n    margin: 0;\n    background: url(${({ src }) => src}) center no-repeat;\n    background-size: cover;\n`;\n\nconst AddLogoBlock = styled.div`\n    flex: 0 1 auto;\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: column;\n    margin-right: 24px;\n    label {\n        text-decoration: underline;\n        font-size: 12px;\n        margin-top: 15px;\n        cursor: pointer;\n        line-height: 16px;\n        letter-spacing: -0.17px;\n        color: #d32b68;\n        font-weight: 600;\n    }\n\n    ${Input} {\n        display: none;\n    }\n    ${InputElementLayout} {\n        position: absolute;\n        top: -999999;\n        z-index: -999999;\n    }\n`;\n\nconst TextBlock = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: auto;\n    padding: 5px 8px;\n    flex: 1 1 auto;\n    ${InputElementLayout} {\n        margin-bottom: -8px;\n        label {\n            margin: 0 0;\n            padding: 0;\n            font-size: 10px;\n            line-height: 14px;\n            color: rgba(42, 63, 88, 0.5);\n            font-weight: bold;\n        }\n        input {\n            outline: none;\n            border: 1px solid lightgray;\n            border-radius: 5px;\n            padding: 12px;\n            margin-top: 6px;\n            color: #293f59;\n            font-size: 13px;\n        }\n    }\n`;\n\nconst Avatar = styled.div`\n    position: absolute;\n    display: inline-block;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    background: url(${({ src }) => src}) center;\n    & + span {\n        margin-left: 32px;\n    }\n`;\n\nconst Table = styled.table`\n    border-collapse: collapse;\n    tr {\n        border-bottom: 1px solid lightgray;\n    }\n    th {\n        font-weight: 600;\n        text-align: left;\n        padding: 8px 5px;\n        font-size: 10px;\n        color: rgba(42, 63, 88, 0.5);\n    }\n    td {\n        position: relative;\n        padding: 15px 5px;\n        border-top: 1px solid lightgray;\n    }\n    th:first-of-type {\n        width: 50px;\n    }\n    th:first-of-type,\n    td:first-of-type {\n        width: 50px;\n        padding-left: 24px;\n    }\n    td span {\n        font-size: 12px;\n        color: #263d5c;\n        line-height: 16px;\n    }\n`;\n\nconst TeamMembersBlock = styled.div`\n    display: flex;\n    background: #fff;\n    border: 1px solid lightgray;\n    border-radius: 5px;\n    margin-top: 24px;\n    padding-top: 18px;\n    flex-direction: column;\n`;\n\nconst CheckboxBlock = styled.div`\n    cursor: pointer;\n    input {\n        display: none;\n    }\n    label {\n        cursor: pointer;\n        display: block;\n        width: 18px;\n        height: 18px;\n        text-align: center;\n        font-weight: bold;\n        border: 2px solid lightgray;\n        border-radius: 2px;\n        background: url(${({ checked }) => (checked ? CheckboxIcon : \"\")}) -5px -5px;\n        background-size: 24px;\n    }\n`;\nconst Checkbox = ({ checked, id, onClick }) => {\n    return (\n        <CheckboxBlock checked={checked}>\n            <label htmlFor={id} />\n            <input onChange={onClick} id={id} type=\"checkbox\" value={checked} checked={checked} />\n        </CheckboxBlock>\n    );\n};\n\nconst Footer = styled.div`\n    margin-top: 12px;\n    padding: 12px 48px;\n    background: #fff;\n    border-radius: 5px;\n    border: 1px solid lightgray;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    button {\n        padding: 8px 12px;\n        font-size: 14px;\n        background: #d12f69;\n        border-radius: 5px;\n        border: none;\n        color: #fff;\n    }\n    a {\n        color: #d32b68;\n    }\n`;\n\nfunction EditCard({\n    match: {\n        params: { id },\n    },\n}) {\n    const [state, setState] = useState({ description: \"\", title: \"\", logo: \"\" });\n    const [errors, setErrors] = useState({});\n    const [logo, setLogo] = useState(\"\");\n    const [teamMembers, setTeamMembers] = useState([\n        { avatar: \"\", user: \"Amy Maxwell\", details: \"616-662-70-90\", checked: false },\n        { avatar: \"\", user: \"Amy Maxwell\", details: \"616-662-70-90\", checked: false },\n    ]);\n    const getDataById = async () => {\n        try {\n            const response = await fetch(`/get-team-by-id/${id}`);\n            if (!response.ok) {\n                return;\n            }\n            const cardData = await response.json();\n            const { teamMembers = [], ...state } = cardData;\n            setState(state);\n            setLogo(state.avatar);\n            setTeamMembers(teamMembers);\n        } catch (e) {}\n    };\n\n    useEffect(() => {\n        if (id) {\n            getDataById();\n        }\n    }, []);\n    const validate = () => {\n        const errors = {};\n        //TODO: make validation\n        if (!state.title) {\n            errors.title = \"Fill title\";\n        }\n        if (!state.description) {\n            errors.description = \"Fill description\";\n        }\n        if (!state.logo) {\n            errors.logo = \"Choose logo\";\n        }\n        if (teamMembers && teamMembers.every(item => !item.checked)) {\n            errors.avatars = \"Choose at least one team member\";\n        }\n        // setErrors(errors);\n        return errors;\n    };\n    useEffect(() => {\n        validate();\n        if (state.logo) {\n            readFile(\"input[name='logo']\", src => {\n                setLogo(src);\n            });\n        }\n    }, [state]);\n    const setItemChecked = index => {\n        setTeamMembers(\n            teamMembers.map((item, i) => {\n                if (i === index) {\n                    item.checked = !item.checked;\n                }\n                return item;\n            })\n        );\n    };\n    const setItemsChecked = () => {\n        if (teamMembers.some(item => !item.checked)) {\n            setTeamMembers(teamMembers.map(item => ({ ...item, checked: true })));\n        } else {\n            setTeamMembers(teamMembers.map(item => ({ ...item, checked: false })));\n        }\n    };\n    return (\n        <Layout>\n            <Form\n                onSubmit={e => {\n                    e.preventDefault();\n                    if (Object.keys(validate()).length > 0) {\n                        alert(`Errors: \\n${JSON.stringify(validate(), null, 2)}`);\n                        return;\n                    }\n                    const { description, title, logo } = state;\n                    const request = {\n                        description,\n                        title,\n                        logo,\n                        teamMembers: teamMembers.filter(item => item.checked),\n                    };\n                    console.log(request);\n                    alert(`send:\\n ${JSON.stringify(request, null, 2)}`);\n                }}>\n                <TeamBlock>\n                    <AddLogoBlock>\n                        <LogoImage src={logo} />\n                        <InputElement state={state} setState={setState} errors={errors} name={\"logo\"} type={\"file\"} />\n                        <label htmlFor=\"logo\">Upload New Image</label>\n                    </AddLogoBlock>\n                    <TextBlock>\n                        <InputElement\n                            state={state}\n                            setState={setState}\n                            errors={errors}\n                            name={\"title\"}\n                            placeholder=\"Enter team name\"\n                            text={\"TEAM NAME\"}\n                        />\n                        <InputElement\n                            state={state}\n                            setState={setState}\n                            errors={errors}\n                            placeholder=\"Enter decription\"\n                            name={\"description\"}\n                            text={\"DESCRIPTION\"}\n                        />\n                    </TextBlock>\n                </TeamBlock>\n                <TeamMembersBlock>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>\n                                    <Checkbox\n                                        onClick={() => setItemsChecked()}\n                                        checked={teamMembers.every(item => item.checked)}\n                                        id={`checkboxAll`}\n                                    />\n                                </th>\n                                <th>USER RESOURCE</th>\n                                <th>DETAILS</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {teamMembers.map(({ avatar, checked, user, details }, index) => (\n                                <tr key={index}>\n                                    <td>\n                                        <Checkbox\n                                            onClick={() => setItemChecked(index)}\n                                            checked={checked}\n                                            id={`checkbox${index}`}\n                                        />\n                                    </td>\n                                    <td>\n                                        <Avatar src={avatar} /> <span>{user}</span>\n                                    </td>\n                                    <td>\n                                        <span>{details}</span>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </TeamMembersBlock>\n                <Footer>\n                    <button type=\"submit\">Save</button>\n                    <Link to={\"/\"}>Back</Link>\n                </Footer>\n            </Form>\n        </Layout>\n    );\n}\n\nexport default withRouter(EditCard);\n","export default function readFile(input, callback) {\n    const file = document.querySelector(input).files[0];\n    var reader = new FileReader();\n\n    reader.onloadend = function() {\n        callback(reader.result);\n    };\n\n    if (file) {\n        reader.readAsDataURL(file);\n    } \n}\n","import React from 'react';\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport CardsPage from \"./CardsPage\";\nimport EditCard from \"./EditCard\";\n\nfunction App() {\n    return (\n        <Router>\n            <Route path=\"/\" exact component={CardsPage}/>\n            <Route path=\"/add-card/\" component={EditCard}/>\n            <Route path=\"/edit-card/:id\" component={EditCard}/>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}